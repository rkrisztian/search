plugins {
	id 'groovy'
	id 'application'
	id 'codenarc'
	id 'jacoco'
	id 'jacoco-report-aggregation'
}

wrapper {
	gradleVersion = '8.3'
	distributionType = Wrapper.DistributionType.ALL
}

version = '3.0.0'
group = 'rkrisztian.search'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	def groovyVersion = '3.0.17'

	implementation "org.codehaus.groovy:groovy-all:$groovyVersion"
	codenarc 'org.codenarc:CodeNarc:3.3.0'
	codenarc "org.codehaus.groovy:groovy-all:$groovyVersion"
}

testing {
	suites {
		all {
			dependencies {
				implementation 'org.spockframework:spock-core:2.3-groovy-3.0'
			}

			useJUnitJupiter()

			targets.all {
				testTask.configure() {
					testLogging { events 'skipped', 'failed' }
				}
			}
		}

		integrationTest(JvmTestSuite) {
			dependencies {
				implementation project()
				implementation configurations.testCompileClasspath
				implementation sourceSets.test.output
			}

			targets.all {
				testTask.configure {
					systemProperty 'java.io.tmpdir', "${->layout.buildDirectory.get()}/tmp"
				}
			}
		}
	}
}

application {
	applicationName = 'search'
	mainClass = 'search.Search'
}

distributions {
	main {
		contents {
			from('README.md') {
				into 'docs'
			}
		}
	}
}

tasks.named('jar') {
	manifest {
		attributes 'Implementation-Title': 'Search App',
				'Implementation-Version': archiveVersion
	}
}

codenarc {
	configFile = file 'config/codenarc/rules.groovy'
	reportFormat = 'html'
}

jacoco {
	toolVersion = '0.8.10'
}

tasks.named('jacocoTestReport') {
	enabled = false
}

tasks.register('codeCoverageReport', JacocoReport) {
	sourceSets sourceSets.main

	tasks.matching({ t -> t.extensions.findByType(JacocoTaskExtension) }).forEach { testTask ->
		executionData testTask
		dependsOn testTask
	}

	reports {
		xml.required = true
		html.required = true
	}
}

tasks.named('check') {
	dependsOn testing.suites.integrationTest
	dependsOn 'codeCoverageReport'
}
